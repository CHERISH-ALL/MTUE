/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-97ca0f39.mjs';
import { defineComponent, createVNode, h } from 'vue';
import { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-vue-next';
import { Button } from '../../button/index.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';
import props from '../props.mjs';
import { i as isFunction_1 } from '../../_chunks/dep-6f372498.mjs';
import { i as isString_1 } from '../../_chunks/dep-6e744142.mjs';
import { i as isArray_1 } from '../../_chunks/dep-0e4e2bcf.mjs';
import '../../_chunks/dep-9213781b.mjs';
import '../../button/button.mjs';
import '../../_chunks/dep-5ce31aa3.mjs';
import '../../_chunks/dep-5597cc76.mjs';
import '../../_chunks/dep-670ed189.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-a210005e.mjs';
import '../../_chunks/dep-48219979.mjs';
import '../../_chunks/dep-95eb038b.mjs';
import '../../_chunks/dep-257497ac.mjs';
import '../../_chunks/dep-f5c04f3c.mjs';
import '../../_chunks/dep-c32ef8ef.mjs';
import '../../_chunks/dep-eae00e6e.mjs';
import '../../_chunks/dep-19284555.mjs';
import '../../_chunks/dep-2b538834.mjs';
import '../../_chunks/dep-40d5a6ec.mjs';
import '../../_chunks/dep-d22c9e6d.mjs';
import '../../_chunks/dep-18e89938.mjs';
import '../../_chunks/dep-50ae0ec6.mjs';
import '../../_chunks/dep-564c533a.mjs';
import '../../_chunks/dep-1b4b86fa.mjs';
import '../../_chunks/dep-5b72198e.mjs';
import '../../_chunks/dep-8eb27cbe.mjs';
import '../../_chunks/dep-6623c796.mjs';
import '../../_chunks/dep-9a145a1d.mjs';
import '../../_chunks/dep-70cd6787.mjs';
import '../../_chunks/dep-a27f8ab7.mjs';
import '../../_chunks/dep-39e58764.mjs';
import '../../_chunks/dep-a2bb880f.mjs';
import '../../_chunks/dep-bf0849ad.mjs';
import '../../_chunks/dep-4ef46503.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-257af9e6.mjs';
import '../../_chunks/dep-c34f015e.mjs';
import '../../_chunks/dep-7e9fb780.mjs';
import '../../_chunks/dep-37133d6d.mjs';
import '../../_chunks/dep-31a95ba9.mjs';
import '../../_chunks/dep-c4e7b9d7.mjs';
import '../../_chunks/dep-3f5bea17.mjs';
import '../../_chunks/dep-ff970c88.mjs';
import '../../_chunks/dep-644e70b3.mjs';
import '../../_chunks/dep-945356ed.mjs';
import '../../_chunks/dep-e9c00cc1.mjs';
import '../../_chunks/dep-688d94c5.mjs';
import '../../_chunks/dep-b02becad.mjs';
import '../../_chunks/dep-c3300d46.mjs';
import '../../_chunks/dep-a9ad4d99.mjs';
import '../../_chunks/dep-0554a988.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-209a9bdd.mjs';
import '../../_chunks/dep-c3ca6d75.mjs';
import '../../_chunks/dep-ab0f22e3.mjs';
import '../../_chunks/dep-d45d8d10.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-dfc325a2.mjs';
import '../../_chunks/dep-8d9b7c94.mjs';
import '../../_chunks/dep-399b9c3e.mjs';
import '../../_chunks/dep-684927fd.mjs';
import '../../_chunks/dep-82139152.mjs';
import '../../_chunks/dep-b88cf96a.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-95651bdf.mjs';
import '../../config-provider/type.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-47d8cf00.mjs';
import '../../button/type.mjs';

var TransferOperations = defineComponent({
  name: "TTransferOperations",
  props: {
    leftDisabled: {
      type: Boolean,
      required: true
    },
    rightDisabled: {
      type: Boolean,
      required: true
    },
    operation: props.operation
  },
  emits: ["moveToRight", "moveToLeft"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots,
      emit = _ref.emit;
    var classPrefix = usePrefixClass();
    var _useGlobalIcon = useGlobalIcon({
        ChevronRightIcon: ChevronRightIcon,
        ChevronLeftIcon: ChevronLeftIcon
      }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
      ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon;
    var moveToRight = function moveToRight() {
      emit("moveToRight");
    };
    var moveToLeft = function moveToLeft() {
      emit("moveToLeft");
    };
    var getIconRight = function getIconRight() {
      return createVNode(ChevronRightIcon$1, null, null);
    };
    var getIconLeft = function getIconLeft() {
      return createVNode(ChevronLeftIcon$1, null, null);
    };
    var getIcon = function getIcon(direction) {
      if (isFunction_1(props2.operation)) {
        return null;
      }
      if (direction === "right" && props2.operation && isFunction_1(props2.operation[0])) {
        return null;
      }
      if (direction === "left" && props2.operation && isFunction_1(props2.operation[1])) {
        return null;
      }
      if (slots.operation) {
        return null;
      }
      return direction === "left" ? getIconLeft : getIconRight;
    };
    var renderButton = function renderButton(h2, direction) {
      if (isFunction_1(slots.operation)) {
        return slots.operation({
          direction: direction
        });
      }
      if (isFunction_1(props2.operation)) {
        var renderContent2 = props2.operation;
        return renderContent2(h2, {
          direction: direction
        });
      }
      var renderContent;
      if (isArray_1(props2.operation)) {
        var _props2$operation = _slicedToArray(props2.operation, 2),
          left = _props2$operation[0],
          right = _props2$operation[1];
        renderContent = direction === "right" ? right : left;
      } else {
        renderContent = "";
      }
      return renderContent;
    };
    return function () {
      var _props2$operation2, _props2$operation3, _props2$operation4, _props2$operation5;
      return createVNode("div", {
        "class": "".concat(classPrefix.value, "-transfer__operations")
      }, [createVNode(Button, {
        "variant": "outline",
        "size": "small",
        "shape": isString_1((_props2$operation2 = props2.operation) === null || _props2$operation2 === void 0 ? void 0 : _props2$operation2[1]) ? "rectangle" : "square",
        "key": props2.rightDisabled ? "right-outline" : "right-base",
        "disabled": props2.rightDisabled,
        "onClick": moveToRight,
        "icon": getIcon("right")
      }, {
        "default": function _default() {
          return [slots.operation || (_props2$operation3 = props2.operation) !== null && _props2$operation3 !== void 0 && _props2$operation3[1] ? renderButton(h, "right") : null];
        }
      }), createVNode(Button, {
        "variant": "outline",
        "size": "small",
        "shape": isString_1((_props2$operation4 = props2.operation) === null || _props2$operation4 === void 0 ? void 0 : _props2$operation4[0]) ? "rectangle" : "square",
        "key": props2.rightDisabled ? "left-outline" : "left-base",
        "disabled": props2.leftDisabled,
        "onClick": moveToLeft,
        "icon": getIcon("left")
      }, {
        "default": function _default() {
          return [slots.operation || (_props2$operation5 = props2.operation) !== null && _props2$operation5 !== void 0 && _props2$operation5[0] ? renderButton(h, "left") : null];
        }
      })]);
    };
  }
});

export { TransferOperations as default };
//# sourceMappingURL=transfer-operations.mjs.map
