/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../_chunks/dep-5ce31aa3.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-97ca0f39.mjs';
import { _ as _defineProperty } from '../_chunks/dep-5597cc76.mjs';
import { isVNode, defineComponent, toRefs, computed, createVNode } from 'vue';
import { p as pick_1 } from '../_chunks/dep-c7559ea1.mjs';
import { i as isFunction_1 } from '../_chunks/dep-6f372498.mjs';
import TransferList from './components/transfer-list.mjs';
import TransferOperations from './components/transfer-operations.mjs';
import { TRANSFER_NAME, getTransferData, filterTransferData, SOURCE, getDataValues, TARGET, getTransferListOption } from './utils.mjs';
import props from './props.mjs';
import useVModel from '../hooks/useVModel.mjs';
import useDefaultValue from '../hooks/useDefaultValue.mjs';
import { useDisabled } from '../hooks/useDisabled.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-9213781b.mjs';
import '../_chunks/dep-670ed189.mjs';
import '../_chunks/dep-95eb038b.mjs';
import '../_chunks/dep-688d94c5.mjs';
import '../_chunks/dep-0e4e2bcf.mjs';
import '../_chunks/dep-9a145a1d.mjs';
import '../_chunks/dep-b02becad.mjs';
import '../_chunks/dep-19284555.mjs';
import '../_chunks/dep-5b72198e.mjs';
import '../_chunks/dep-50ae0ec6.mjs';
import '../_chunks/dep-c32ef8ef.mjs';
import '../_chunks/dep-eae00e6e.mjs';
import '../_chunks/dep-48219979.mjs';
import '../_chunks/dep-2b538834.mjs';
import '../_chunks/dep-40d5a6ec.mjs';
import '../_chunks/dep-c3300d46.mjs';
import '../_chunks/dep-6ad78111.mjs';
import '../_chunks/dep-257497ac.mjs';
import '../_chunks/dep-f5c04f3c.mjs';
import '../_chunks/dep-70cd6787.mjs';
import '../_chunks/dep-a9ad4d99.mjs';
import '../_chunks/dep-6623c796.mjs';
import '../_chunks/dep-1b4b86fa.mjs';
import '../_chunks/dep-d53d13e3.mjs';
import '../_chunks/dep-3f5bea17.mjs';
import '../_chunks/dep-a2bb880f.mjs';
import '../_chunks/dep-39e58764.mjs';
import '../pagination/index.mjs';
import '../pagination/pagination.mjs';
import '../_chunks/dep-209a9bdd.mjs';
import '../_chunks/dep-d45d8d10.mjs';
import 'tdesign-icons-vue-next';
import '../hooks/useGlobalIcon.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-95651bdf.mjs';
import '../_chunks/dep-37133d6d.mjs';
import '../_chunks/dep-18e89938.mjs';
import '../_chunks/dep-564c533a.mjs';
import '../_chunks/dep-8eb27cbe.mjs';
import '../_chunks/dep-31a95ba9.mjs';
import '../_chunks/dep-c4e7b9d7.mjs';
import '../_chunks/dep-6e744142.mjs';
import '../_chunks/dep-d22c9e6d.mjs';
import '../_chunks/dep-a27f8ab7.mjs';
import '../_chunks/dep-bf0849ad.mjs';
import '../_chunks/dep-4ef46503.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-257af9e6.mjs';
import '../_chunks/dep-c34f015e.mjs';
import '../_chunks/dep-7e9fb780.mjs';
import '../config-provider/type.mjs';
import '../input-number/index.mjs';
import '../input-number/input-number.mjs';
import '../button/index.mjs';
import '../button/button.mjs';
import '../loading/index.mjs';
import '../_chunks/dep-a210005e.mjs';
import '../_chunks/dep-ff970c88.mjs';
import '../_chunks/dep-644e70b3.mjs';
import '../_chunks/dep-945356ed.mjs';
import '../_chunks/dep-e9c00cc1.mjs';
import '../_chunks/dep-0554a988.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-c3ca6d75.mjs';
import '../_chunks/dep-ab0f22e3.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-dfc325a2.mjs';
import '../_chunks/dep-8d9b7c94.mjs';
import '../_chunks/dep-399b9c3e.mjs';
import '../_chunks/dep-684927fd.mjs';
import '../_chunks/dep-82139152.mjs';
import '../_chunks/dep-b88cf96a.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../utils/set-style.mjs';
import '../hooks/tnode.mjs';
import '../_chunks/dep-47d8cf00.mjs';
import '../button/type.mjs';
import '../input/index.mjs';
import '../input/input.mjs';
import '../input/props.mjs';
import '../hooks/useReadonly.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../_common/js/log/log.mjs';
import '../input/useLengthLimit.mjs';
import '../_common/js/log/index.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../hooks/useResizeObserver.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../input/type.mjs';
import '../input-number/props.mjs';
import '../input-number/hooks/useInputNumber.mjs';
import '../_common/js/input-number/number.mjs';
import '../_common/js/input-number/large-number.mjs';
import '../input-number/type.mjs';
import '../select/index.mjs';
import '../select/select.mjs';
import '../_chunks/dep-8b2e46b6.mjs';
import '../_chunks/dep-6eed8561.mjs';
import '../_chunks/dep-272a424d.mjs';
import '../_chunks/dep-0272e73d.mjs';
import '../common-components/fake-arrow.mjs';
import '../select-input/index.mjs';
import '../select-input/select-input.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../popup/container.mjs';
import '../popup/props.mjs';
import '../popup/type.mjs';
import '../select-input/props.mjs';
import '../select-input/useSingle.mjs';
import '../select-input/useMultiple.mjs';
import '../tag-input/index.mjs';
import '../tag-input/tag-input.mjs';
import '../tag-input/props.mjs';
import '../tag-input/hooks/useTagScroll.mjs';
import '../tag-input/useTagList.mjs';
import '../tag/index.mjs';
import '../tag/tag.mjs';
import '../_chunks/dep-4c53eba6.mjs';
import '../tag/props.mjs';
import '../tag/check-tag.mjs';
import '../tag/check-tag-props.mjs';
import '../_common/js/common.mjs';
import '../tag/check-tag-group.mjs';
import '../tag/check-tag-group-props.mjs';
import '../tag/type.mjs';
import '../tag-input/hooks/useHover.mjs';
import '../tag-input/hooks/useDragSorter.mjs';
import '../tag-input/type.mjs';
import '../select-input/useOverlayInnerStyle.mjs';
import '../select-input/type.mjs';
import '../select/select-panel.mjs';
import '../_chunks/dep-3aafefae.mjs';
import '../_chunks/dep-385f320b.mjs';
import '../select/option.mjs';
import '../select/option-props.mjs';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../_common/js/utils/observe.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../checkbox/type.mjs';
import '../select/helper.mjs';
import '../select/optionGroup.mjs';
import '../select/option-group-props.mjs';
import '../select/props.mjs';
import '../select/hooks/usePanelVirtualScroll.mjs';
import '../select/hooks/useSelectOptions.mjs';
import '../select/hooks/useKeyboardControl.mjs';
import '../select/type.mjs';
import '../input-adornment/index.mjs';
import '../input-adornment/input-adornment.mjs';
import '../input-adornment/props.mjs';
import '../input-adornment/type.mjs';
import '../pagination/props.mjs';
import '../pagination/usePaginationClasses.mjs';
import '../pagination/useMoreAction.mjs';
import '../pagination/pagination-mini.mjs';
import '../pagination/pagination-mini-props.mjs';
import '../pagination/type.mjs';
import './components/transfer-search.mjs';
import './hooks/useDragSort.mjs';
import '../utils/event.mjs';
import '../utils/helper.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var _Transfer = defineComponent({
  name: TRANSFER_NAME,
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var disabled = useDisabled();
    var classPrefix = usePrefixClass();
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue,
      checked = _toRefs.checked;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var _useDefaultValue = useDefaultValue(checked, props2.defaultChecked, props2.onCheckedChange, "checked"),
      _useDefaultValue2 = _slicedToArray(_useDefaultValue, 1),
      innerChecked = _useDefaultValue2[0];
    var valueList = computed(function () {
      return innerValue.value;
    });
    var isTreeMode = computed(function () {
      var treeSlot = slots.tree;
      return isFunction_1(treeSlot);
    });
    var leftButtonDisabled = computed(function () {
      return props2.direction === "right";
    });
    var rightButtonDisabled = computed(function () {
      return props2.direction === "left";
    });
    var transferData = computed(function () {
      return getTransferData(props2.data, props2.keys, isTreeMode.value);
    });
    var sourceList = computed(function () {
      return filterTransferData(transferData.value, valueList.value, false, isTreeMode.value);
    });
    var targetList = computed(function () {
      return filterTransferData(transferData.value, valueList.value, true, isTreeMode.value);
    });
    var checkedValue = computed(function () {
      return _defineProperty(_defineProperty({}, SOURCE, getDataValues(sourceList.value, innerChecked.value, {
        isTreeMode: isTreeMode.value
      })), TARGET, getDataValues(targetList.value, innerChecked.value, {
        isTreeMode: isTreeMode.value
      }));
    });
    var hasFooter = computed(function () {
      return !!slots.footer || !!props2.footer;
    });
    var showPagination = computed(function () {
      return !!props2.pagination && !slots.content;
    });
    var showSearch = computed(function () {
      return !!props2.search;
    });
    var footerOption = computed(function () {
      var footer = props2.footer || "";
      return getTransferListOption(footer);
    });
    var emptyOption = computed(function () {
      return getTransferListOption(props2.empty);
    });
    var searchOption = computed(function () {
      return getTransferListOption(props2.search);
    });
    var checkAllOption = computed(function () {
      return getTransferListOption(props2.showCheckAll);
    });
    var disabledOption = computed(function () {
      return getTransferListOption(disabled.value);
    });
    var titleOption = computed(function () {
      return getTransferListOption(props2.title);
    });
    var paginationOption = computed(function () {
      return getTransferListOption(props2.pagination);
    });
    var handleCheckedChange = function handleCheckedChange(val, listType) {
      var _props2$onCheckedChan;
      var sourceChecked = listType === SOURCE ? val : checkedValue.value[SOURCE];
      var targetChecked = listType === TARGET ? val : checkedValue.value[TARGET];
      var checked2 = [].concat(_toConsumableArray(sourceChecked), _toConsumableArray(targetChecked));
      var event = {
        checked: checked2,
        sourceChecked: sourceChecked,
        targetChecked: targetChecked,
        type: listType
      };
      innerChecked.value = checked2;
      (_props2$onCheckedChan = props2.onCheckedChange) === null || _props2$onCheckedChan === void 0 || _props2$onCheckedChan.call(props2, event);
    };
    var transferTo = function transferTo(toDirection) {
      var oldTargetValue = JSON.parse(JSON.stringify(valueList.value));
      var newTargetValue;
      var selfCheckedValue = toDirection === TARGET ? checkedValue.value[SOURCE] : checkedValue.value[TARGET];
      if (toDirection === SOURCE) {
        newTargetValue = oldTargetValue.filter(function (v) {
          return !selfCheckedValue.includes(v);
        });
      } else if (props2.targetSort === "original") {
        var remainValue = transferData.value.reduce(function (acc, data) {
          if (oldTargetValue.includes(data.value) && data.disabled) {
            return acc.concat(data.value);
          }
          return acc;
        }, []);
        newTargetValue = getDataValues(transferData.value, oldTargetValue.concat(selfCheckedValue), {
          isTreeMode: isTreeMode.value,
          remainValue: remainValue
        });
      } else if (props2.targetSort === "unshift") {
        newTargetValue = selfCheckedValue.concat(oldTargetValue);
      } else {
        newTargetValue = oldTargetValue.concat(selfCheckedValue);
      }
      handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);
      var params = {
        type: toDirection,
        movedValue: selfCheckedValue
      };
      setInnerValue(newTargetValue, params);
    };
    var transferToRight = function transferToRight() {
      transferTo(TARGET);
    };
    var transferToLeft = function transferToLeft() {
      transferTo(SOURCE);
    };
    var handleScroll = function handleScroll(e, listType) {
      var _props2$onScroll;
      var target = e.target;
      var bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;
      var event = {
        e: e,
        bottomDistance: bottomDistance,
        type: listType
      };
      (_props2$onScroll = props2.onScroll) === null || _props2$onScroll === void 0 || _props2$onScroll.call(props2, event);
    };
    var handleSearch = function handleSearch(e) {
      var _props2$onSearch;
      (_props2$onSearch = props2.onSearch) === null || _props2$onSearch === void 0 || _props2$onSearch.call(props2, e);
    };
    var handlePageChange = function handlePageChange(pageInfo, listType) {
      var _props2$onPageChange;
      (_props2$onPageChange = props2.onPageChange) === null || _props2$onPageChange === void 0 || _props2$onPageChange.call(props2, pageInfo, {
        type: listType
      });
    };
    var handleDataChange = function handleDataChange(data, movedValue) {
      setInnerValue(data, {
        type: TARGET,
        movedValue: movedValue
      });
    };
    var renderTransferList = function renderTransferList(listType) {
      var scopedSlots = pick_1(slots, ["title", "empty", "footer", "operation", "transferItem", "default", "tree"]);
      return createVNode(TransferList, {
        "checkboxProps": props2.checkboxProps,
        "transferItem": props2.transferItem,
        "list-type": listType,
        "title": titleOption.value[listType],
        "data-source": listType === SOURCE ? sourceList.value : targetList.value,
        "checked-value": checkedValue.value[listType],
        "disabled": disabledOption.value[listType],
        "search": searchOption.value[listType],
        "pagination": paginationOption.value[listType],
        "check-all": checkAllOption.value[listType],
        "footer": footerOption.value[listType],
        "empty": emptyOption.value[listType],
        "onCheckedChange": function onCheckedChange($event) {
          return handleCheckedChange($event, listType);
        },
        "onScroll": function onScroll($event) {
          return handleScroll($event, listType);
        },
        "onSearch": handleSearch,
        "onPageChange": function onPageChange($event) {
          return handlePageChange($event, listType);
        },
        "isTreeMode": isTreeMode.value,
        "onDataChange": handleDataChange,
        "currentValue": valueList.value,
        "draggable": props2.targetDraggable && listType === TARGET
      }, _isSlot(scopedSlots) ? scopedSlots : {
        "default": function _default() {
          return [scopedSlots];
        }
      });
    };
    return function () {
      return createVNode("div", {
        "class": ["".concat(classPrefix.value, "-transfer"), showSearch.value ? "".concat(classPrefix.value, "-transfer__search") : "", hasFooter.value ? "".concat(classPrefix.value, "-transfer__footer") : "", showPagination.value ? "".concat(classPrefix.value, "-transfer__pagination") : "", isTreeMode.value ? "".concat(classPrefix.value, "-transfer--with-tree") : ""]
      }, [renderTransferList(SOURCE), createVNode(TransferOperations, {
        "leftDisabled": disabledOption.value[TARGET] || leftButtonDisabled.value || checkedValue.value[TARGET].length === 0,
        "rightDisabled": disabledOption.value[SOURCE] || rightButtonDisabled.value || checkedValue.value[SOURCE].length === 0,
        "operation": props2.operation,
        "onMoveToRight": transferToRight,
        "onMoveToLeft": transferToLeft
      }, {
        operation: slots.operation
      }), renderTransferList(TARGET)]);
    };
  }
});

export { _Transfer as default };
//# sourceMappingURL=transfer.mjs.map
