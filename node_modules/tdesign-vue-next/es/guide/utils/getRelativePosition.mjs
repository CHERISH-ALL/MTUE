/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { getWindowScroll, getElmCssPropValue, isFixed } from '../../utils/dom.mjs';
import '../../_chunks/dep-95eb038b.mjs';
import '../../_chunks/dep-6e744142.mjs';
import '../../_chunks/dep-19284555.mjs';
import '../../_chunks/dep-670ed189.mjs';
import '../../_chunks/dep-0e4e2bcf.mjs';
import '../../_chunks/dep-9a145a1d.mjs';
import '../../_chunks/dep-5b72198e.mjs';
import '../../_chunks/dep-6f372498.mjs';
import '../../_chunks/dep-48219979.mjs';
import '../../_chunks/dep-2b538834.mjs';
import '../../utils/easing.mjs';

function getRelativePosition(elm) {
  var relativeElm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;
  var _getWindowScroll = getWindowScroll(),
    scrollTop = _getWindowScroll.scrollTop,
    scrollLeft = _getWindowScroll.scrollLeft;
  var _elm$getBoundingClien = elm.getBoundingClientRect(),
    elmTop = _elm$getBoundingClien.top,
    elmLeft = _elm$getBoundingClien.left;
  var _relativeElm$getBound = relativeElm.getBoundingClientRect(),
    relElmTop = _relativeElm$getBound.top,
    relElmLeft = _relativeElm$getBound.left;
  var relativeElmPosition = getElmCssPropValue(relativeElm, "position");
  if (relativeElm.tagName.toLowerCase() !== "body" && relativeElmPosition === "relative" || relativeElmPosition === "sticky") {
    return {
      top: elmTop - relElmTop,
      left: elmLeft - relElmLeft
    };
  }
  if (isFixed(elm)) {
    return {
      top: elmTop,
      left: elmLeft
    };
  }
  return {
    top: elmTop + scrollTop,
    left: elmLeft + scrollLeft
  };
}

export { getRelativePosition as default };
//# sourceMappingURL=getRelativePosition.mjs.map
