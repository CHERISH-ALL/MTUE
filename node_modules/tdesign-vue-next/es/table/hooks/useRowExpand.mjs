/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-5597cc76.mjs';
import { _ as _toConsumableArray } from '../../_chunks/dep-5ce31aa3.mjs';
import { _ as _slicedToArray } from '../../_chunks/dep-97ca0f39.mjs';
import { toRefs, computed, createVNode } from 'vue';
import { ChevronRightCircleIcon } from 'tdesign-icons-vue-next';
import { g as get_1 } from '../../_chunks/dep-e9c00cc1.mjs';
import useClassName from './useClassName.mjs';
import { useTNodeJSX } from '../../hooks/tnode.mjs';
import useDefaultValue from '../../hooks/useDefaultValue.mjs';
import '../../hooks/useConfig.mjs';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-670ed189.mjs';
import '../../_chunks/dep-9213781b.mjs';
import '../../_chunks/dep-95eb038b.mjs';
import '../../_chunks/dep-688d94c5.mjs';
import '../../_chunks/dep-0e4e2bcf.mjs';
import '../../_chunks/dep-9a145a1d.mjs';
import '../../_chunks/dep-b02becad.mjs';
import '../../_chunks/dep-19284555.mjs';
import '../../_chunks/dep-5b72198e.mjs';
import '../../_chunks/dep-50ae0ec6.mjs';
import '../../_chunks/dep-c32ef8ef.mjs';
import '../../_chunks/dep-6f372498.mjs';
import '../../_chunks/dep-48219979.mjs';
import '../../_chunks/dep-2b538834.mjs';
import '../../_chunks/dep-eae00e6e.mjs';
import '../../_chunks/dep-40d5a6ec.mjs';
import '../../_chunks/dep-c3300d46.mjs';
import '../../_chunks/dep-95651bdf.mjs';
import '../../_chunks/dep-37133d6d.mjs';
import '../../_chunks/dep-18e89938.mjs';
import '../../_chunks/dep-564c533a.mjs';
import '../../_chunks/dep-1b4b86fa.mjs';
import '../../_chunks/dep-8eb27cbe.mjs';
import '../../_chunks/dep-257497ac.mjs';
import '../../_chunks/dep-f5c04f3c.mjs';
import '../../_chunks/dep-6623c796.mjs';
import '../../_chunks/dep-70cd6787.mjs';
import '../../_chunks/dep-31a95ba9.mjs';
import '../../_chunks/dep-c4e7b9d7.mjs';
import '../../_chunks/dep-3f5bea17.mjs';
import '../../_chunks/dep-6e744142.mjs';
import '../../_chunks/dep-d22c9e6d.mjs';
import '../../_chunks/dep-a27f8ab7.mjs';
import '../../_chunks/dep-39e58764.mjs';
import '../../_chunks/dep-a2bb880f.mjs';
import '../../_chunks/dep-bf0849ad.mjs';
import '../../_chunks/dep-4ef46503.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-257af9e6.mjs';
import '../../_chunks/dep-c34f015e.mjs';
import '../../_chunks/dep-7e9fb780.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-8d9b7c94.mjs';
import '../../_chunks/dep-399b9c3e.mjs';
import '../../_chunks/dep-684927fd.mjs';
import '../../_chunks/dep-82139152.mjs';
import '../../_chunks/dep-b88cf96a.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-dfc325a2.mjs';

function useRowExpand(props, context) {
  var _toRefs = toRefs(props),
    expandedRowKeys = _toRefs.expandedRowKeys;
  var renderTNode = useTNodeJSX();
  var _useConfig = useConfig("table", props.locale),
    t = _useConfig.t,
    globalConfig = _useConfig.globalConfig;
  var _useGlobalIcon = useGlobalIcon({
      ChevronRightCircleIcon: ChevronRightCircleIcon
    }),
    ChevronRightCircleIcon$1 = _useGlobalIcon.ChevronRightCircleIcon;
  var _useClassName = useClassName(),
    tableExpandClasses = _useClassName.tableExpandClasses,
    positiveRotate90 = _useClassName.positiveRotate90,
    tableFullRowClasses = _useClassName.tableFullRowClasses;
  var _useDefaultValue = useDefaultValue(expandedRowKeys, props.defaultExpandedRowKeys || [], props.onExpandChange, "expandedRowKeys"),
    _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),
    tExpandedRowKeys = _useDefaultValue2[0],
    setTExpandedRowKeys = _useDefaultValue2[1];
  var showExpandedRow = computed(function () {
    return Boolean(props.expandedRow || context.slots.expandedRow || context.slots["expanded-row"]);
  });
  var showExpandIconColumn = computed(function () {
    return props.expandIcon !== false && showExpandedRow.value;
  });
  var isFirstColumnFixed = computed(function () {
    var _props$columns;
    return ((_props$columns = props.columns) === null || _props$columns === void 0 || (_props$columns = _props$columns[0]) === null || _props$columns === void 0 ? void 0 : _props$columns.fixed) === "left";
  });
  var getExpandedRowClass = function getExpandedRowClass(params) {
    var _tExpandedRowKeys$val;
    if (!showExpandedRow.value) return null;
    var row = params.row,
      rowKey = params.rowKey;
    var currentRowKey = get_1(row, rowKey || "id");
    return tableExpandClasses[(_tExpandedRowKeys$val = tExpandedRowKeys.value) !== null && _tExpandedRowKeys$val !== void 0 && _tExpandedRowKeys$val.includes(currentRowKey) ? "rowExpanded" : "rowFolded"];
  };
  var onToggleExpand = function onToggleExpand(e, row) {
    props.expandOnRowClick && e.stopPropagation();
    var currentId = get_1(row, props.rowKey || "id");
    var index = tExpandedRowKeys.value.indexOf(currentId);
    var newKeys = _toConsumableArray(tExpandedRowKeys.value);
    index !== -1 ? newKeys.splice(index, 1) : newKeys.push(currentId);
    setTExpandedRowKeys(newKeys, {
      expandedRowData: props.data.filter(function (t2) {
        return newKeys.includes(get_1(t2, props.rowKey || "id"));
      }),
      currentRowData: row
    });
  };
  var renderExpandIcon = function renderExpandIcon(_, p) {
    var row = p.row,
      rowIndex = p.rowIndex;
    var currentId = get_1(row, props.rowKey || "id");
    var expanded = tExpandedRowKeys.value.includes(currentId);
    var icon = renderTNode("expandIcon", {
      defaultNode: t(globalConfig.value.expandIcon) || createVNode(ChevronRightCircleIcon$1, null, null),
      params: {
        row: row,
        index: rowIndex
      }
    });
    if (!icon) return null;
    var classes = [tableExpandClasses.iconBox, tableExpandClasses[expanded ? "expanded" : "collapsed"], _defineProperty({}, positiveRotate90, expanded)];
    return createVNode("span", {
      "class": classes,
      "onClick": function onClick(e) {
        return onToggleExpand(e, row);
      }
    }, [icon]);
  };
  var getExpandColumn = function getExpandColumn() {
    var expandCol = {
      colKey: "__EXPAND_ROW_ICON_COLUMN__",
      width: 46,
      className: tableExpandClasses.iconCell,
      fixed: isFirstColumnFixed.value ? "left" : void 0,
      cell: renderExpandIcon,
      stopPropagation: true
    };
    return expandCol;
  };
  var renderExpandedRow = function renderExpandedRow(p) {
    var rowId = get_1(p.row, props.rowKey || "id");
    if (!tExpandedRowKeys.value || !tExpandedRowKeys.value.includes(rowId)) return null;
    var isFixedLeft = p.isWidthOverflow && props.columns.find(function (item) {
      return item.fixed === "left";
    });
    return createVNode("tr", {
      "key": "expand_".concat(rowId),
      "class": [tableExpandClasses.row, _defineProperty({}, tableFullRowClasses.base, isFixedLeft)]
    }, [createVNode("td", {
      "colspan": p.columns.length
    }, [createVNode("div", {
      "class": [tableExpandClasses.rowInner, _defineProperty({}, tableFullRowClasses.innerFullRow, isFixedLeft)],
      "style": isFixedLeft ? {
        width: "".concat(p.tableWidth, "px")
      } : {}
    }, [createVNode("div", {
      "class": tableFullRowClasses.innerFullElement
    }, [renderTNode("expandedRow", {
      params: p
    })])])])]);
  };
  var onInnerExpandRowClick = function onInnerExpandRowClick(p) {
    onToggleExpand(p.e, p.row);
  };
  return {
    showExpandedRow: showExpandedRow,
    showExpandIconColumn: showExpandIconColumn,
    getExpandColumn: getExpandColumn,
    renderExpandedRow: renderExpandedRow,
    onInnerExpandRowClick: onInnerExpandRowClick,
    getExpandedRowClass: getExpandedRowClass
  };
}

export { useRowExpand as default };
//# sourceMappingURL=useRowExpand.mjs.map
