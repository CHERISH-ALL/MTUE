/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-5597cc76.mjs';
import { isVNode, defineComponent, ref, computed, onMounted, onUpdated, createVNode } from 'vue';
import { d as debounce_1 } from '../_chunks/dep-8b2e46b6.mjs';
import { renderContent } from '../utils/render-tnode.mjs';
import { isTextEllipsis } from '../utils/dom.mjs';
import { Tooltip } from '../tooltip/index.mjs';
import '../_chunks/dep-670ed189.mjs';
import '../_chunks/dep-95eb038b.mjs';
import '../_chunks/dep-48219979.mjs';
import '../_chunks/dep-2b538834.mjs';
import '../_chunks/dep-19284555.mjs';
import '../_chunks/dep-6eed8561.mjs';
import '../_chunks/dep-b02becad.mjs';
import '../_chunks/dep-5b72198e.mjs';
import '../_chunks/dep-dfc325a2.mjs';
import '../_chunks/dep-31a95ba9.mjs';
import '../_chunks/dep-564c533a.mjs';
import '../_chunks/dep-1b4b86fa.mjs';
import '../_chunks/dep-6f372498.mjs';
import '../_chunks/dep-eae00e6e.mjs';
import '../_chunks/dep-8eb27cbe.mjs';
import '../_chunks/dep-c32ef8ef.mjs';
import '../_chunks/dep-c4e7b9d7.mjs';
import '../_chunks/dep-6623c796.mjs';
import '../_chunks/dep-0e4e2bcf.mjs';
import '../_chunks/dep-9a145a1d.mjs';
import '../_chunks/dep-6e744142.mjs';
import '../_chunks/dep-8d9b7c94.mjs';
import '../_chunks/dep-c3300d46.mjs';
import '../_chunks/dep-399b9c3e.mjs';
import '../_chunks/dep-684927fd.mjs';
import '../_chunks/dep-82139152.mjs';
import '../_chunks/dep-b88cf96a.mjs';
import '../utils/easing.mjs';
import '../tooltip/tooltip.mjs';
import '../_chunks/dep-97ca0f39.mjs';
import '../_chunks/dep-9213781b.mjs';
import '../_chunks/dep-3aafefae.mjs';
import '../_chunks/dep-37133d6d.mjs';
import '../_chunks/dep-18e89938.mjs';
import '../_chunks/dep-50ae0ec6.mjs';
import '../_chunks/dep-40d5a6ec.mjs';
import '../_chunks/dep-257497ac.mjs';
import '../_chunks/dep-f5c04f3c.mjs';
import '../_chunks/dep-70cd6787.mjs';
import '../_chunks/dep-3f5bea17.mjs';
import '../_chunks/dep-688d94c5.mjs';
import '../_chunks/dep-385f320b.mjs';
import '../_chunks/dep-bf0849ad.mjs';
import '../_chunks/dep-d53d13e3.mjs';
import '../_chunks/dep-a2bb880f.mjs';
import '../_chunks/dep-39e58764.mjs';
import '../tooltip/props.mjs';
import '../popup/props.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/tnode.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-95651bdf.mjs';
import '../_chunks/dep-d22c9e6d.mjs';
import '../_chunks/dep-a27f8ab7.mjs';
import '../_chunks/dep-4ef46503.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-257af9e6.mjs';
import '../_chunks/dep-c34f015e.mjs';
import '../_chunks/dep-7e9fb780.mjs';
import '../config-provider/type.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../_common/js/log/log.mjs';
import '../_common/js/utils/set-style.mjs';
import '../popup/container.mjs';
import '../_chunks/dep-5ce31aa3.mjs';
import '../hooks/useResizeObserver.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../popup/type.mjs';
import '../tooltip/util.mjs';
import '../tooltip/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var TEllipsis = defineComponent({
  name: "TEllipsis",
  props: {
    content: {
      type: [String, Function]
    },
    "default": {
      type: [String, Function]
    },
    tooltipContent: {
      type: [String, Number, Function]
    },
    placement: String,
    attach: [String, Function],
    tooltipProps: Object,
    zIndex: Number,
    overlayClassName: String,
    classPrefix: {
      type: String,
      "default": "t"
    }
  },
  setup: function setup(props) {
    var root = ref();
    var flag = ref(false);
    var isOverflow = ref(false);
    var ellipsisClasses = computed(function () {
      return ["".concat(props.classPrefix, "-table__ellipsis"), "".concat(props.classPrefix, "-text-ellipsis")];
    });
    var innerEllipsisClassName = computed(function () {
      return ["".concat(props.classPrefix, "-table__ellipsis-content"), props.overlayClassName];
    });
    onMounted(function () {
      isOverflow.value = isTextEllipsis(root.value);
    });
    onUpdated(function () {
      isOverflow.value = isTextEllipsis(root.value);
    });
    var onTriggerMouseenter = function onTriggerMouseenter() {
      if (!root.value) return;
      flag.value = true;
    };
    var onTriggerMouseleave = function onTriggerMouseleave() {
      if (!root.value) return;
    };
    var handleVisibleChange = function handleVisibleChange(v) {
      if (!v) flag.value = false;
    };
    var onMouseAround = debounce_1(function (e) {
      e.type === "mouseleave" ? onTriggerMouseleave() : onTriggerMouseenter();
    }, 80);
    return {
      flag: flag,
      root: root,
      isOverflow: isOverflow,
      ellipsisClasses: ellipsisClasses,
      innerEllipsisClassName: innerEllipsisClassName,
      onMouseAround: onMouseAround,
      handleVisibleChange: handleVisibleChange
    };
  },
  render: function render() {
    var cellNode = renderContent(this, "default", "content");
    var ellipsisContent = createVNode("div", {
      "ref": "root",
      "class": this.ellipsisClasses,
      "onMouseenter": this.onMouseAround,
      "onMouseleave": this.onMouseAround,
      "style": {
        textOverflow: this.isOverflow ? "ellipsis" : "clip"
      }
    }, [cellNode]);
    var content = null;
    var tooltipProps = this.tooltipProps;
    if (this.isOverflow && this.flag) {
      var rProps = _objectSpread({
        content: this.tooltipContent || function () {
          return cellNode;
        },
        destroyOnClose: true,
        zIndex: this.zIndex,
        attach: this.attach,
        placement: this.placement,
        overlayClassName: tooltipProps !== null && tooltipProps !== void 0 && tooltipProps.overlayClassName ? this.innerEllipsisClassName.concat(tooltipProps.overlayClassName) : this.innerEllipsisClassName,
        onVisibleChange: this.handleVisibleChange
      }, tooltipProps);
      content = createVNode(Tooltip, rProps, _isSlot(ellipsisContent) ? ellipsisContent : {
        "default": function _default() {
          return [ellipsisContent];
        }
      });
    } else {
      content = ellipsisContent;
    }
    return content;
  }
});

export { TEllipsis as default };
//# sourceMappingURL=ellipsis.mjs.map
