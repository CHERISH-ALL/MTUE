/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-5597cc76.mjs';
import { _ as _toConsumableArray } from '../_chunks/dep-5ce31aa3.mjs';
import { _ as _typeof } from '../_chunks/dep-670ed189.mjs';
import { defineComponent, toRefs, computed, createVNode, mergeProps } from 'vue';
import { Checkbox, CheckboxGroup } from '../checkbox/index.mjs';
import { i as intersection_1 } from '../_chunks/dep-272a424d.mjs';
import '../hooks/index.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-9213781b.mjs';
import '../checkbox/checkbox.mjs';
import '../_chunks/dep-97ca0f39.mjs';
import '../checkbox/props.mjs';
import '../hooks/useVModel.mjs';
import '../_chunks/dep-b88cf96a.mjs';
import '../_chunks/dep-95eb038b.mjs';
import '../_chunks/dep-82139152.mjs';
import '../_chunks/dep-c3300d46.mjs';
import '../_chunks/dep-19284555.mjs';
import '../_chunks/dep-0e4e2bcf.mjs';
import '../_chunks/dep-9a145a1d.mjs';
import '../_chunks/dep-b02becad.mjs';
import '../_chunks/dep-5b72198e.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-d22c9e6d.mjs';
import '../_chunks/dep-18e89938.mjs';
import '../_chunks/dep-50ae0ec6.mjs';
import '../_chunks/dep-c32ef8ef.mjs';
import '../_chunks/dep-6f372498.mjs';
import '../_chunks/dep-48219979.mjs';
import '../_chunks/dep-2b538834.mjs';
import '../_chunks/dep-eae00e6e.mjs';
import '../_chunks/dep-40d5a6ec.mjs';
import '../_chunks/dep-564c533a.mjs';
import '../_chunks/dep-1b4b86fa.mjs';
import '../_chunks/dep-8eb27cbe.mjs';
import '../_chunks/dep-257497ac.mjs';
import '../_chunks/dep-f5c04f3c.mjs';
import '../_chunks/dep-6623c796.mjs';
import '../_chunks/dep-70cd6787.mjs';
import '../_chunks/dep-a27f8ab7.mjs';
import '../_chunks/dep-39e58764.mjs';
import '../_chunks/dep-a2bb880f.mjs';
import '../_chunks/dep-bf0849ad.mjs';
import '../_chunks/dep-4ef46503.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-257af9e6.mjs';
import '../_chunks/dep-c34f015e.mjs';
import '../_chunks/dep-7e9fb780.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-95651bdf.mjs';
import '../_chunks/dep-37133d6d.mjs';
import '../_chunks/dep-31a95ba9.mjs';
import '../_chunks/dep-c4e7b9d7.mjs';
import '../_chunks/dep-3f5bea17.mjs';
import '../_chunks/dep-6e744142.mjs';
import '../config-provider/type.mjs';
import '../utils/set-style.mjs';
import '../hooks/tnode.mjs';
import '../_chunks/dep-8d9b7c94.mjs';
import '../_chunks/dep-399b9c3e.mjs';
import '../_chunks/dep-684927fd.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-dfc325a2.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../_common/js/utils/observe.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../_common/js/common.mjs';
import '../hooks/useDisabled.mjs';
import '../_chunks/dep-47d8cf00.mjs';
import '../hooks/useReadonly.mjs';
import '../checkbox/group.mjs';
import '../_chunks/dep-ab0f22e3.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../hooks/slot.mjs';
import '../_chunks/dep-644e70b3.mjs';
import '../_chunks/dep-0272e73d.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../checkbox/type.mjs';
import '../hooks/icon.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../_common/js/log/log.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ColumnCheckboxGroup = defineComponent({
  name: "ColumnCheckboxGroup",
  props: {
    checkboxProps: Object,
    options: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    label: String,
    uniqueKey: String,
    value: Array,
    onChange: Function
  },
  setup: function setup(props) {
    var _toRefs = toRefs(props),
      checkboxProps = _toRefs.checkboxProps,
      value = _toRefs.value,
      options = _toRefs.options;
    var classPrefix = usePrefixClass();
    var allCheckedColumnKeys = computed(function () {
      var allCheckedKeys = [];
      options.value.forEach(function (option) {
        if (_typeof(option) === "object") {
          if (option.disabled) return;
          if (option.value) {
            allCheckedKeys.push(option.value);
          } else if (typeof option.label === "string") {
            allCheckedKeys.push(option.label);
          }
        } else {
          allCheckedKeys.push(option);
        }
      });
      return allCheckedKeys;
    });
    var intersectionKeys = computed(function () {
      return intersection_1(allCheckedColumnKeys.value, value.value);
    });
    var isCheckedAll = computed(function () {
      var len = intersectionKeys.value.length;
      return Boolean(len && allCheckedColumnKeys.value.length === len);
    });
    var isIndeterminate = computed(function () {
      var len = intersectionKeys.value.length;
      return Boolean(len < allCheckedColumnKeys.value.length && len);
    });
    var onCheckAllColumnsChange = function onCheckAllColumnsChange(checkAll, ctx) {
      var changeParams = {
        e: ctx.e,
        type: "check",
        current: void 0,
        option: void 0
      };
      if (checkAll) {
        var _props$onChange;
        var newKeys = _toConsumableArray(new Set(value.value.concat(allCheckedColumnKeys.value)));
        (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(props, newKeys, changeParams);
      } else {
        var _props$onChange2;
        var _newKeys = value.value.filter(function (val) {
          return !allCheckedColumnKeys.value.includes(val);
        });
        (_props$onChange2 = props.onChange) === null || _props$onChange2 === void 0 || _props$onChange2.call(props, _newKeys, _objectSpread(_objectSpread({}, changeParams), {}, {
          type: "uncheck"
        }));
      }
    };
    var handleCheckChange = function handleCheckChange(val, ctx) {
      var _props$onChange3;
      (_props$onChange3 = props.onChange) === null || _props$onChange3 === void 0 || _props$onChange3.call(props, val, ctx);
    };
    var classes = computed(function () {
      return ["".concat(classPrefix.value, "-table__column-controller-item"), _defineProperty({}, "".concat(classPrefix.value, "-table__").concat(props.uniqueKey), props.uniqueKey)];
    });
    return function () {
      return createVNode("div", {
        "class": classes.value
      }, [createVNode("div", {
        "class": "".concat(classPrefix.value, "-table__column-controller-block")
      }, [createVNode(Checkbox, {
        "indeterminate": isIndeterminate.value,
        "checked": isCheckedAll.value,
        "onChange": onCheckAllColumnsChange,
        "disabled": !allCheckedColumnKeys.value.length
      }, {
        "default": function _default() {
          return [props.label];
        }
      })]), createVNode("div", {
        "class": "".concat(classPrefix.value, "-table__column-controller-block")
      }, [createVNode(CheckboxGroup, mergeProps({
        "options": options.value
      }, checkboxProps.value, {
        "modelValue": value.value,
        "onChange": handleCheckChange
      }), null)])]);
    };
  }
});

export { ColumnCheckboxGroup as default };
//# sourceMappingURL=column-checkbox-group.mjs.map
