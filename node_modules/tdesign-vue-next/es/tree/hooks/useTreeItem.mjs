/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-5597cc76.mjs';
import { reactive, onMounted, onUpdated, createVNode } from 'vue';
import '../adapt.mjs';
import useItemEvents from './useItemEvents.mjs';
import useRenderIcon from './useRenderIcon.mjs';
import useRenderLabel from './useRenderLabel.mjs';
import useRenderLine from './useRenderLine.mjs';
import useRenderOperations from './useRenderOperations.mjs';
import useDraggable from './useDraggable.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import useLazyLoad from '../../hooks/useLazyLoad.mjs';
import '../../_chunks/dep-670ed189.mjs';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-b88cf96a.mjs';
import '../../_chunks/dep-95eb038b.mjs';
import '../../_chunks/dep-82139152.mjs';
import '../../_chunks/dep-c3300d46.mjs';
import '../../_chunks/dep-19284555.mjs';
import '../../_chunks/dep-0e4e2bcf.mjs';
import '../../_chunks/dep-9a145a1d.mjs';
import '../../_chunks/dep-b02becad.mjs';
import '../../_chunks/dep-5b72198e.mjs';
import '../../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-97ca0f39.mjs';
import '../../_chunks/dep-9213781b.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../_chunks/dep-d22c9e6d.mjs';
import '../../_chunks/dep-18e89938.mjs';
import '../../_chunks/dep-50ae0ec6.mjs';
import '../../_chunks/dep-c32ef8ef.mjs';
import '../../_chunks/dep-6f372498.mjs';
import '../../_chunks/dep-48219979.mjs';
import '../../_chunks/dep-2b538834.mjs';
import '../../_chunks/dep-eae00e6e.mjs';
import '../../_chunks/dep-40d5a6ec.mjs';
import '../../_chunks/dep-564c533a.mjs';
import '../../_chunks/dep-1b4b86fa.mjs';
import '../../_chunks/dep-8eb27cbe.mjs';
import '../../_chunks/dep-257497ac.mjs';
import '../../_chunks/dep-f5c04f3c.mjs';
import '../../_chunks/dep-6623c796.mjs';
import '../../_chunks/dep-70cd6787.mjs';
import '../../_chunks/dep-a27f8ab7.mjs';
import '../../_chunks/dep-39e58764.mjs';
import '../../_chunks/dep-a2bb880f.mjs';
import '../../_chunks/dep-bf0849ad.mjs';
import '../../_chunks/dep-4ef46503.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-257af9e6.mjs';
import '../../_chunks/dep-c34f015e.mjs';
import '../../_chunks/dep-7e9fb780.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-95651bdf.mjs';
import '../../_chunks/dep-37133d6d.mjs';
import '../../_chunks/dep-31a95ba9.mjs';
import '../../_chunks/dep-c4e7b9d7.mjs';
import '../../_chunks/dep-3f5bea17.mjs';
import '../../_chunks/dep-6e744142.mjs';
import '../../config-provider/type.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../_chunks/dep-8d9b7c94.mjs';
import '../../_chunks/dep-399b9c3e.mjs';
import '../../_chunks/dep-684927fd.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-dfc325a2.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-47d8cf00.mjs';
import '../../hooks/useReadonly.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-5ce31aa3.mjs';
import '../../_chunks/dep-272a424d.mjs';
import '../../_chunks/dep-644e70b3.mjs';
import '../../_chunks/dep-0272e73d.mjs';
import '../../_chunks/dep-ab0f22e3.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-a210005e.mjs';
import '../../_chunks/dep-ff970c88.mjs';
import '../../_chunks/dep-945356ed.mjs';
import '../../_chunks/dep-e9c00cc1.mjs';
import '../../_chunks/dep-688d94c5.mjs';
import '../../_chunks/dep-a9ad4d99.mjs';
import '../../_chunks/dep-0554a988.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-209a9bdd.mjs';
import '../../_chunks/dep-c3ca6d75.mjs';
import '../../_chunks/dep-d45d8d10.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_chunks/dep-cf4a2c01.mjs';
import '../../_chunks/dep-8b2e46b6.mjs';
import '../../_chunks/dep-6eed8561.mjs';
import '../../_common/js/tree/tree-node.mjs';
import '../../_chunks/dep-c7f689d1.mjs';
import '../../_chunks/dep-2c57cd88.mjs';
import '../../_chunks/dep-1f263304.mjs';
import '../../_chunks/dep-c0dc4756.mjs';
import '../../_common/js/tree/tree-node-model.mjs';
import '../../_chunks/dep-3aafefae.mjs';
import '../../_chunks/dep-385f320b.mjs';
import '../../_chunks/dep-d53d13e3.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';
import '../util.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useTreeItem(state) {
  var treeScope = state.treeScope,
    treeItemRef = state.treeItemRef;
  var virtualConfig = treeScope.virtualConfig,
    treeContentRef = treeScope.treeContentRef,
    scrollProps = treeScope.scrollProps;
  var classPrefix = usePrefixClass().value;
  var componentName = usePrefixClass("tree").value;
  var _useItemEvents = useItemEvents(state),
    handleClick = _useItemEvents.handleClick;
  var _useRenderIcon = useRenderIcon(state),
    renderIcon = _useRenderIcon.renderIcon;
  var _useRenderLabel = useRenderLabel(state),
    renderLabel = _useRenderLabel.renderLabel;
  var _useRenderLine = useRenderLine(state),
    renderLine = _useRenderLine.renderLine;
  var _useRenderOperations = useRenderOperations(state),
    renderOperations = _useRenderOperations.renderOperations;
  var _useDraggable = useDraggable(state),
    dragStates = _useDraggable.dragStates,
    handleDragStart = _useDraggable.handleDragStart,
    handleDragEnd = _useDraggable.handleDragEnd,
    handleDragOver = _useDraggable.handleDragOver,
    handleDragLeave = _useDraggable.handleDragLeave,
    handleDrop = _useDraggable.handleDrop;
  var _useLazyLoad = useLazyLoad(treeContentRef, treeItemRef, reactive(_objectSpread({}, scrollProps === null || scrollProps === void 0 ? void 0 : scrollProps.value))),
    hasLazyLoadHolder = _useLazyLoad.hasLazyLoadHolder,
    tRowHeight = _useLazyLoad.tRowHeight;
  function tryNotifyVirtualScrollRowUpdate() {
    var node = state.node;
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    if (isVirtual) {
      var timer = setTimeout(function () {
        virtualConfig.handleRowMounted({
          ref: treeItemRef,
          data: node
        });
        clearTimeout(timer);
      }, 100);
    }
  }
  onMounted(function () {
    tryNotifyVirtualScrollRowUpdate();
  });
  onUpdated(function () {
    tryNotifyVirtualScrollRowUpdate();
  });
  var getItemStyles = function getItemStyles() {
    var node = state.node;
    var level = node.level;
    var levelStyle = "--level: ".concat(level, ";");
    var strStyle = "".concat(levelStyle);
    return strStyle;
  };
  var getItemClassList = function getItemClassList() {
    var node = state.node;
    var isDragOver = dragStates.isDragOver,
      isDragging = dragStates.isDragging,
      dropPosition = dragStates.dropPosition;
    var list = [];
    list.push("".concat(componentName, "__item"));
    list.push(_defineProperty(_defineProperty(_defineProperty({}, "".concat(componentName, "__item--open"), node.expanded), "".concat(classPrefix, "-is-active"), node.isActivable() ? node.actived : false), "".concat(classPrefix, "-is-disabled"), node.isDisabled()));
    list.push(_defineProperty({}, "".concat(componentName, "__item--draggable"), node.isDraggable()));
    if (node.visible) {
      list.push("".concat(componentName, "__item--visible"));
    } else {
      list.push("".concat(componentName, "__item--hidden"));
    }
    if (node.vmIsLocked) {
      list.push("".concat(componentName, "__item--locked"));
    }
    if (node.vmIsRest) {
      list.push("".concat(componentName, "__item--matched"));
    }
    list.push(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(componentName, "__item--dragging"), isDragging), "".concat(componentName, "__item--tip-top"), isDragOver && dropPosition < 0), "".concat(componentName, "__item--tip-bottom"), isDragOver && dropPosition > 0), "".concat(componentName, "__item--tip-highlight"), !isDragging && isDragOver && dropPosition === 0));
    return list;
  };
  var renderItem = function renderItem(h) {
    var itemNodes = [];
    var iconNode = renderIcon(h);
    var lineNode = renderLine(h);
    if (lineNode) {
      itemNodes.push(lineNode);
    }
    if (iconNode) {
      itemNodes.push(iconNode);
    }
    var labelNode = renderLabel(h);
    if (labelNode) {
      itemNodes.push(labelNode);
    }
    var opNode = renderOperations(h);
    if (opNode) {
      itemNodes.push(opNode);
    }
    return itemNodes;
  };
  var renderItemNode = function renderItemNode(h) {
    var node = state.node,
      props = state.props;
    if (!node) return null;
    var level = node.level,
      value = node.value;
    var styles = getItemStyles();
    var classList = getItemClassList();
    var treeState = state;
    treeState.stateId = props.stateId;
    var itemNode = createVNode("div", {
      "ref": "treeItemRef",
      "class": classList,
      "data-value": value,
      "data-level": level,
      "style": styles,
      "onClick": function onClick(evt) {
        return handleClick(evt);
      },
      "draggable": node.isDraggable(),
      "onDragstart": function onDragstart(evt) {
        return handleDragStart(evt);
      },
      "onDragend": function onDragend(evt) {
        return handleDragEnd(evt);
      },
      "onDragover": function onDragover(evt) {
        return handleDragOver(evt);
      },
      "onDragleave": function onDragleave(evt) {
        return handleDragLeave(evt);
      },
      "onDrop": function onDrop(evt) {
        return handleDrop(evt);
      }
    }, [hasLazyLoadHolder.value ? [createVNode("div", null, null)] : renderItem(h)]);
    return itemNode;
  };
  return {
    hasLazyLoadHolder: hasLazyLoadHolder,
    tRowHeight: tRowHeight,
    renderItemNode: renderItemNode
  };
}

export { useTreeItem as default };
//# sourceMappingURL=useTreeItem.mjs.map
