/**
 * tdesign v1.10.2
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-97ca0f39.mjs';
import '../adapt.mjs';
import { getNode, pathMatchClass } from '../util.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import '../../_chunks/dep-9213781b.mjs';
import 'vue';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-b88cf96a.mjs';
import '../../_chunks/dep-95eb038b.mjs';
import '../../_chunks/dep-82139152.mjs';
import '../../_chunks/dep-c3300d46.mjs';
import '../../_chunks/dep-19284555.mjs';
import '../../_chunks/dep-670ed189.mjs';
import '../../_chunks/dep-0e4e2bcf.mjs';
import '../../_chunks/dep-9a145a1d.mjs';
import '../../_chunks/dep-b02becad.mjs';
import '../../_chunks/dep-5b72198e.mjs';
import '../../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-5597cc76.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../_chunks/dep-d22c9e6d.mjs';
import '../../_chunks/dep-18e89938.mjs';
import '../../_chunks/dep-50ae0ec6.mjs';
import '../../_chunks/dep-c32ef8ef.mjs';
import '../../_chunks/dep-6f372498.mjs';
import '../../_chunks/dep-48219979.mjs';
import '../../_chunks/dep-2b538834.mjs';
import '../../_chunks/dep-eae00e6e.mjs';
import '../../_chunks/dep-40d5a6ec.mjs';
import '../../_chunks/dep-564c533a.mjs';
import '../../_chunks/dep-1b4b86fa.mjs';
import '../../_chunks/dep-8eb27cbe.mjs';
import '../../_chunks/dep-257497ac.mjs';
import '../../_chunks/dep-f5c04f3c.mjs';
import '../../_chunks/dep-6623c796.mjs';
import '../../_chunks/dep-70cd6787.mjs';
import '../../_chunks/dep-a27f8ab7.mjs';
import '../../_chunks/dep-39e58764.mjs';
import '../../_chunks/dep-a2bb880f.mjs';
import '../../_chunks/dep-bf0849ad.mjs';
import '../../_chunks/dep-4ef46503.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-257af9e6.mjs';
import '../../_chunks/dep-c34f015e.mjs';
import '../../_chunks/dep-7e9fb780.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-95651bdf.mjs';
import '../../_chunks/dep-37133d6d.mjs';
import '../../_chunks/dep-31a95ba9.mjs';
import '../../_chunks/dep-c4e7b9d7.mjs';
import '../../_chunks/dep-3f5bea17.mjs';
import '../../_chunks/dep-6e744142.mjs';
import '../../config-provider/type.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../_chunks/dep-8d9b7c94.mjs';
import '../../_chunks/dep-399b9c3e.mjs';
import '../../_chunks/dep-684927fd.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-dfc325a2.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-47d8cf00.mjs';
import '../../hooks/useReadonly.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-5ce31aa3.mjs';
import '../../_chunks/dep-272a424d.mjs';
import '../../_chunks/dep-644e70b3.mjs';
import '../../_chunks/dep-0272e73d.mjs';
import '../../_chunks/dep-ab0f22e3.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-a210005e.mjs';
import '../../_chunks/dep-ff970c88.mjs';
import '../../_chunks/dep-945356ed.mjs';
import '../../_chunks/dep-e9c00cc1.mjs';
import '../../_chunks/dep-688d94c5.mjs';
import '../../_chunks/dep-a9ad4d99.mjs';
import '../../_chunks/dep-0554a988.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-209a9bdd.mjs';
import '../../_chunks/dep-c3ca6d75.mjs';
import '../../_chunks/dep-d45d8d10.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../hooks/useLazyLoad.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_chunks/dep-cf4a2c01.mjs';
import '../../_chunks/dep-8b2e46b6.mjs';
import '../../_chunks/dep-6eed8561.mjs';
import '../../_common/js/tree/tree-node.mjs';
import '../../_chunks/dep-c7f689d1.mjs';
import '../../_chunks/dep-2c57cd88.mjs';
import '../../_chunks/dep-1f263304.mjs';
import '../../_chunks/dep-c0dc4756.mjs';
import '../../_common/js/tree/tree-node-model.mjs';
import '../../_chunks/dep-3aafefae.mjs';
import '../../_chunks/dep-385f320b.mjs';
import '../../_chunks/dep-d53d13e3.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';

function useTreeAction(state) {
  var treeState = state;
  var store = treeState.store;
  var componentName = usePrefixClass("tree").value;
  var _state$vmValue = _slicedToArray(state.vmValue, 2),
    tValue = _state$vmValue[0],
    setTValue = _state$vmValue[1];
  var _state$vmActived = _slicedToArray(state.vmActived, 2),
    tActived = _state$vmActived[0],
    setTActived = _state$vmActived[1];
  var _state$vmExpanded = _slicedToArray(state.vmExpanded, 2),
    tExpanded = _state$vmExpanded[0],
    setTExpanded = _state$vmExpanded[1];
  var setExpanded = function setExpanded(item, isExpanded) {
    var node = getNode(store, item);
    var mouseEvent = treeState.mouseEvent;
    var evtCtx = {
      node: node.getModel(),
      e: mouseEvent,
      trigger: "setItem"
    };
    if (mouseEvent) {
      evtCtx.trigger = "node-click";
      var target = mouseEvent.target;
      var currentTarget = mouseEvent.currentTarget;
      if (pathMatchClass("".concat(componentName, "__icon"), target, currentTarget)) {
        evtCtx.trigger = "icon-click";
      }
    }
    var expanded = node.setExpanded(isExpanded, {
      directly: true
    });
    setTExpanded(expanded, evtCtx);
    if (evtCtx.trigger !== "setItem") {
      store.replaceExpanded(tExpanded.value || []);
    }
    return expanded;
  };
  var toggleExpanded = function toggleExpanded(item) {
    var node = getNode(store, item);
    return setExpanded(node, !node.isExpanded());
  };
  var setActived = function setActived(item, isActived) {
    var node = getNode(store, item);
    var mouseEvent = treeState.mouseEvent;
    var evtCtx = {
      node: node.getModel(),
      e: mouseEvent,
      trigger: "setItem"
    };
    if (mouseEvent) {
      evtCtx.trigger = "node-click";
    }
    var actived = node.setActived(isActived, {
      isAction: evtCtx.trigger === "node-click",
      directly: true
    });
    setTActived(actived, evtCtx);
    if (evtCtx.trigger !== "setItem") {
      store.replaceActived(tActived.value || []);
    }
    return actived;
  };
  var toggleActived = function toggleActived(item) {
    var node = getNode(store, item);
    return setActived(node, !node.isActived());
  };
  var setChecked = function setChecked(item, isChecked, ctx) {
    var node = getNode(store, item);
    var mouseEvent = ctx === null || ctx === void 0 ? void 0 : ctx.e;
    var evtCtx = {
      node: node.getModel(),
      e: mouseEvent,
      trigger: "setItem"
    };
    if (mouseEvent) {
      evtCtx.trigger = "node-click";
    }
    var checked = node.setChecked(isChecked, {
      isAction: evtCtx.trigger === "node-click",
      directly: true
    });
    setTValue(checked, evtCtx);
    if (evtCtx.trigger !== "setItem") {
      store.replaceChecked(tValue.value || []);
    }
    return checked;
  };
  var toggleChecked = function toggleChecked(item, ctx) {
    var node = getNode(store, item);
    if (node.isIndeterminate()) {
      var expectState = node.hasEnableUnCheckedChild();
      return setChecked(node, expectState, ctx);
    }
    return setChecked(node, !node.isChecked(), ctx);
  };
  return {
    setExpanded: setExpanded,
    toggleExpanded: toggleExpanded,
    setActived: setActived,
    toggleActived: toggleActived,
    setChecked: setChecked,
    toggleChecked: toggleChecked
  };
}

export { useTreeAction as default };
//# sourceMappingURL=useTreeAction.mjs.map
