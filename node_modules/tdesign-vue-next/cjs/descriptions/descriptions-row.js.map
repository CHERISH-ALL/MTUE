{"version":3,"file":"descriptions-row.js","sources":["../../src/descriptions/descriptions-row.tsx"],"sourcesContent":["import { defineComponent, inject, PropType } from 'vue';\n\nimport { LayoutEnum } from '../common';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\n\nimport { descriptionsKey } from './const';\nimport { ItemsType, TdDescriptionItem } from './interface';\nimport { renderVNodeTNode, itemTypeIsProps } from './utils';\n\nexport default defineComponent({\n  name: 'TDescriptionsRow',\n  props: {\n    row: Array as PropType<TdDescriptionItem[]>,\n    itemType: String as PropType<ItemsType>,\n  },\n  setup(props) {\n    const descriptionsProps = inject(descriptionsKey);\n    const COMPONENT_NAME = usePrefixClass('descriptions');\n    const { globalConfig } = useConfig('descriptions');\n\n    const label = (node: TdDescriptionItem, layout: LayoutEnum = 'horizontal') => {\n      const labelClass = [`${COMPONENT_NAME.value}__label`];\n\n      let label = null;\n      let span = null;\n      if (itemTypeIsProps(props.itemType, node)) {\n        label = node.label;\n        span = node.span;\n      } else {\n        label = renderVNodeTNode(node, 'label');\n        span = node.props.span;\n      }\n      const labelSpan = layout === 'horizontal' ? 1 : span;\n\n      return (\n        <td colspan={labelSpan} class={labelClass} {...{ style: descriptionsProps.labelStyle }}>\n          {label}\n          {descriptionsProps.colon && globalConfig.value.colonText}\n        </td>\n      );\n    };\n\n    const content = (node: TdDescriptionItem, layout: LayoutEnum = 'horizontal') => {\n      const contentClass = [`${COMPONENT_NAME.value}__content`];\n\n      let content = null;\n      let span = null;\n      if (itemTypeIsProps(props.itemType, node)) {\n        content = node.content;\n        span = node.span;\n      } else {\n        content = renderVNodeTNode(node, 'content', 'default');\n        span = node.props.span;\n      }\n      const contentSpan = span > 1 && layout === 'horizontal' ? span * 2 - 1 : span;\n\n      return (\n        <td colspan={contentSpan} class={contentClass} {...{ style: descriptionsProps.contentStyle }}>\n          {content}\n        </td>\n      );\n    };\n\n    // 总共有四种布局\n    // Layout horizontal vertical\n    // itemLayout horizontal vertical\n\n    const hh = () => (\n      <tr>\n        {props.row.map((node) => (\n          <>\n            {label(node)}\n            {content(node)}\n          </>\n        ))}\n      </tr>\n    );\n\n    const hv = () => (\n      <>\n        <tr>{props.row.map((node) => label(node, 'vertical'))}</tr>\n        <tr>{props.row.map((node) => content(node, 'vertical'))}</tr>\n      </>\n    );\n\n    const vh = () => (\n      <>\n        {props.row.map((node) => (\n          <tr>\n            {label(node)}\n            {content(node)}\n          </tr>\n        ))}\n      </>\n    );\n\n    const vv = () => (\n      <>\n        {props.row.map((node) => (\n          <>\n            <tr>{label(node)}</tr>\n            <tr>{content(node)}</tr>\n          </>\n        ))}\n      </>\n    );\n\n    return () => (\n      <>\n        {descriptionsProps.layout === 'horizontal'\n          ? descriptionsProps.itemLayout === 'horizontal'\n            ? hh()\n            : hv()\n          : descriptionsProps.itemLayout === 'horizontal'\n          ? vh()\n          : vv()}\n      </>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","row","Array","itemType","String","setup","descriptionsProps","inject","descriptionsKey","COMPONENT_NAME","usePrefixClass","_useConfig","useConfig","globalConfig","label","node","layout","arguments","length","undefined","labelClass","concat","value","span","itemTypeIsProps","renderVNodeTNode","labelSpan","_createVNode","_mergeProps","style","labelStyle","colon","colonText","content","contentClass","contentSpan","contentStyle","hh","map","_Fragment","hv","vh","vv","itemLayout"],"mappings":"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"}